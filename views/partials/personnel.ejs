
<div class="col-xl-4 col-lg-5 col-sm-auto">
  <div class="well">
    <div class="card">
      <div class="card-body p-2">
        <div class="align-items-center d-flex ">
          <h2 class="card-title m-0 text-nowrap ">PERSONNEL - <%= personnel.length  %> </h2>
          <button class="btn border-secondary-subtle ms-auto text-nowrap" data-bs-toggle="modal" data-bs-target="#addNewPersonModal">ADD +</button>
        </div>

      <!-- Modal for adding a new person -->
      <div class="modal fade" id="addNewPersonModal" tabindex="-1" aria-labelledby="addNewPersonModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <form  id="personForm" action="/projects" method = "POST">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="addNewPersonModalLabel">Add Person</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div class="modal-body">
                <label for="firstName">First name:</label>
                <input type="text" id="firstName" name="firstName" required><br><br>
                <label for="lastName">Last name:</label>
                <input type="text" id="lastName" name="lastName" required><br><br>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button name="addNewPerson" type="submit" class="btn btn-primary" >Submit</button>
              </div>
            </div>
          </form>
        </div>
      </div>

        <% let assigned = 0; let unassigned = 0; personnel.forEach(function(person) {if (person.projects && person.projects.length > 0) {assigned+=1} else {unassigned+=1}}) %>
        <hr class="mt-2"><h5 class="card-title">Assigned - <%= assigned %></h5>
        <div class="card-body bg-secondary-subtle rounded" id="cont" ondrop="drop(event)" ondragover="allowDrop(event)">

        <% personnel.forEach(function(person) { if ((person.projects && person.projects.length)) { 
          let assignments = [];
          person.projects.forEach(function(assignment) {
            let projectName = projects.find(project=> project._id === assignment.id).name
            assignments.push(projectName)
          }) %>

          <div class="btn bg-light border-secondary-subtle w-100 d-inline-flex p-0">
            <div id="<%= person._id %>-button" draggable="True" type="button"
              class="btn bg-light noDrop w-100 text-start" 
              data-bs-html="true"
              data-bs-toggle="popover"
              
              title= "<span><b><%=person.firstName%> <%=person.lastName%></b></span> " 
              data-bs-placement="left"  
              data-bs-content="<ul>
                <% assignments.forEach(function(item) { %>
                  <li><%= item %></li>
                <% }) %>
                </ul>
                " 
              ondragstart="drag(event)"
              >
              
              
              <strong><%= person.firstName+' '+person.lastName %></strong>
                <% 
                  // count how many projects each person has and determine their color
                  let total = utils.countProjects(person)
                  let color = utils.getColor(total)
                %>
                <span class="badge bg-<%=color%> float-start me-2">
                  <%= total %>
                </span>
            </div>
            <div class="dropdown">
              <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="20" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                </svg>
              </button>
              <!-- Lincoln - edit and delete buttons in dropdown list that both pop up modals -->
              <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <li><button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#editPersonModal-<%= person._id %>">EDIT</button></li>
                
                <li><button style="color:red" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#deletePersonModal-<%= person._id %>">DELETE</button></li>
              </ul>

            </div>

            <% // Modal for deleting personnel %>
            <div class="modal fade" id="deletePersonModal-<%= person._id %>" tabindex="-1" aria-labelledby="deletePersonModalLabel" aria-hidden="true">
              <div class="modal-dialog">
                <form  id="deletePersonForm" action="/projects" method = "POST">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title" id="deletePersonModalLabel">Delete Person</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                      Are you sure you want to delete the person "<%=person.firstName+' '+person.lastName%>"? This action is irreversible.
                    </div>
                    <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                      <button name="deletePerson" type="submit" class="btn btn-danger" value="<%=person._id%>" id="<%=person._id%>" >Delete</button>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
          <% // Modal for editing personnel %>
              <div class="modal fade" id="editPersonModal-<%=person._id %>" tabindex="-1" aria-labelledby="editPersonModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                  <form  id="editPersonForm" action="/projects" method = "POST">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="editPersonModalLabel">Edit Person</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body">
                        <label for="firstName">First Name:</label>
                        <input class="input" type="text" id="firstName" name="firstName" value="<%=person.firstName%>"required><br><br>
                        <label for="lastName">Last Name:</label>
                        <input class="input" type="text" id="lastName" name="lastName" value="<%=person.lastName%>" required><br><br>
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button name="editPerson" type="submit" class="btn btn-primary" value="<%=person._id%>" id="<%=person._id%>" >Submit</button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
                
        <% }}); %>

        </div>
          <hr>
          <h5 class="card-title">Unassigned - <%= unassigned %></h5>
          <div id="unassigned" class="card-body bg-secondary-subtle rounded" ondrop="drop(event)" ondragover="allowDrop(event)" id="peopleList">
          <% personnel.forEach(function(person) { if (!person.projects || (person.projects && !person.projects.length)){ %>
            <div class="btn bg-light border-secondary-subtle w-100 d-inline-flex p-0">
              <div name="persbtn" id="<%= person._id %>-button" draggable="True"  class="btn bg-light noDrop w-100 text-start" data-bs-toggle="popover"  title= "Info for <%=person.firstName%> <%=person.lastName%>" data-bs-placement="left" data-bs-content="No projects assigned." ondragstart="drag(event)">
                <strong>
                  <%= person.firstName+' '+person.lastName %>
                </strong>
                <span class="badge bg-primary float-start me-2">
                      0
                </span>
              </div>
              <div class="dropdown">
                <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="20" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                    <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                  </svg>
                </button>

                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                  <li><button 
                    class="dropdown-item" 
                    data-bs-toggle="modal" 
                    data-bs-target="#editPersonModal-<%= person._id %>">EDIT PERSON</button></li>
                  
                  <li><button 
                    style="color:red" 
                    class="dropdown-item" 
                    data-bs-toggle="modal" 
                    data-bs-target="#deletePersonModal-<%= person._id %>">DELETE</button></li>
                </ul>

              </div>

              <% // Modal for deleting personnel %>
              <div class="modal fade" 
                id="deletePersonModal-<%= person._id %>" 
                tabindex="-1" 
                aria-labelledby="deletePersonModalLabel" 
                aria-hidden="true">

                <div class="modal-dialog">
                  <form  id="deletePersonForm" action="/projects" method = "POST">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="deletePersonModalLabel">Delete Person</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body">
                        Are you sure you want to delete the person "<%=person.firstName+' '+person.lastName%>"? This action is irreversible.
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button name="deletePerson" type="submit" class="btn btn-danger" value="<%=person._id%>" id="<%=person._id%>" >Delete</button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>

              <% // Modal for editing personnel %>
              <div class="modal fade" 
                id="editPersonModal-<%= person._id %>" 
                tabindex="-1" 
                aria-labelledby="editPersonModalLabel" 
                aria-hidden="true">

                <div class="modal-dialog">
                  <form  id="editPersonForm" action="/projects" method = "POST">
                    <div class="modal-content">
                      <div class="modal-header">
                        <h5 class="modal-title" id="editPersonModalLabel">Edit Person</h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                      </div>
                      <div class="modal-body">
                        <label for="firstName">First Name:</label>
                        <input type="text" id="firstName" name="firstName" value="<%=person.firstName%>"required><br><br>
                        <label for="lastName">Last Name:</label>
                        <input type="text" id="lastName" name="lastName" value="<%=person.lastName%>"required><br><br>
                        
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button name="editPerson" type="submit" class="btn btn-primary" value="<%=person._id%>" id="<%=person._id%>" >Submit</button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>

            </div>
      
            <% }}); %>
            
          </div>
      </div>
    </div>
  </div>
</div>


<script>
  var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
  var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
    return new bootstrap.Popover(popoverTriggerEl)
  });

  // Gonzales - drag and drop

  // this strange query is how you search for slices of names
  const projectMembers = document.querySelectorAll('[id$="-members"]');
  const projectLeads = document.querySelectorAll('[id$="-lead"]');
  const personnel = document.querySelectorAll('[id$="-button"]');
  const unassignedCard = document.querySelector("#unassigned");

  for (let person of personnel) {
    // dataTransfer adds data to the drag event I don't quite get it.
    person.addEventListener('dragstart', e => {
      e.dataTransfer.setData('text/plain', e.target.id);
    });
  }

  for (let project of projectMembers) {
    project.addEventListener('drop', e => {
      // data gets to the drop event through the e.dataTransfer
      e.preventDefault();
      const personID = e.dataTransfer.getData('text/plain').slice(0, -7); // extract the personID from the dataTransfer (-7 for -button)
      const projectID = project.id.slice(0, -8); // Extract the project ID from the element ID (-8 for -members)
      joinPersonToProject(personID, projectID);
    })
  }

  for (let project of projectLeads) {
    project.addEventListener('drop', e => {
      e.preventDefault();
      const personID = e.dataTransfer.getData('text/plain').slice(0, -7); // extract the personID from the dataTransfer
      const projectID = project.id.slice(0, -5); // Extract the project ID from the element ID (-5 for -lead)
      changeLead(personID, projectID);
    })
  }

  unassignedCard.addEventListener('drop', e => {
    e.preventDefault();
    const personID = e.dataTransfer.getData('text/plain').slice(0, -7); // extract the personID from the dataTransfer
    unassign(personID);
  })

  // okay so this function posts by creating a hidden form and then submitting it
  function joinPersonToProject(personID, projectID) {
    // create the form
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = '/projects';
    form.display = "hidden"

    // create the three parts of the form
    const functionInput = document.createElement('input');
    functionInput.name = 'function';
    functionInput.value = 'join';

    const personIDInput = document.createElement('input');
    personIDInput.name = 'personID';
    personIDInput.value = personID;

    const projectIDInput = document.createElement('input');
    projectIDInput.name = 'projectID';
    projectIDInput.value = projectID;

    // add them to the form
    form.appendChild(functionInput);
    form.appendChild(personIDInput);
    form.appendChild(projectIDInput);

    // okay so you have to add the form to the webpage
    document.body.appendChild(form);

    // submit form
    form.submit();
  }

  function changeLead(personID, projectID) {
    // create the form
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = '/projects';
    form.display = "hidden"

    // create the three parts of the form
    const functionInput = document.createElement('input');
    functionInput.name = 'function';
    functionInput.value = 'changeLead';

    const personIDInput = document.createElement('input');
    personIDInput.name = 'personID';
    personIDInput.value = personID;

    const projectIDInput = document.createElement('input');
    projectIDInput.name = 'projectID';
    projectIDInput.value = projectID;

    // add them to the form
    form.appendChild(functionInput);
    form.appendChild(personIDInput);
    form.appendChild(projectIDInput);

    // okay so you have to add the form to the webpage
    document.body.appendChild(form);

    // submit form
    form.submit();
  }

  function unassign(personID) {
    // create the form
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = '/projects';
    form.display = "hidden"

    // create the three parts of the form
    const functionInput = document.createElement('input');
    functionInput.name = 'function';
    functionInput.value = 'unassign';

    const personIDInput = document.createElement('input');
    personIDInput.name = 'personID';
    personIDInput.value = personID;

    // add them to the form
    form.appendChild(functionInput);
    form.appendChild(personIDInput);

    // okay so you have to add the form to the webpage
    document.body.appendChild(form);

    // submit form
    form.submit();
  }

</script>